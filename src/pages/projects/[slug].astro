---
import { getCollection, type CollectionEntry } from "astro:content";
import { readdir } from "fs/promises";
import Article from "../../components/Article.astro";
import Layout from "../../components/Layout.astro";

export async function getStaticPaths() {
  const projects = await getCollection("project");
  return Promise.all(
    projects.map(async (project) => ({
      params: { slug: project.slug },
      props: {
        ...project,
        images: await readdir(`public/images/${project.slug}`)
          .then((images) =>
            images.map(
              // Vite needs a hardcoded file extension to import images
              (file) =>
                import(
                  `../../../public/images/${project.slug}/${file.replace(".jpg", "")}.jpg`
                )
            )
          )
          .catch(() => {
            console.warn(
              `WARN: Did not find folder: public/images/${project.slug}`
            );
            return [];
          }),
      },
    }))
  );
}
type Props = CollectionEntry<"project"> & { images: string[] };

const { images, render, data: {description} } = Astro.props;
const { Content } = await render();
---

<Layout description={description}>
  <Article Content={Content} images={images} />
</Layout>
